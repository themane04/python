Function two_dimensional_sort(array):
    Check if array is two-dimensional and square (same number of rows and columns)
        For each row in the array
            If the length of the row is not equal to the length of the array
                Throw an exception with the message "Row length does not match the array's first dimension. First error at row X"

    Flatten the array into a single list
        Initialize an empty list to hold all elements
        For each row in the array
            Add all elements of the row to the list

    Sort the flattened list from smallest to largest number

    Create a new two-dimensional array with the sorted elements
        Calculate the size of the new square array (should be the square root of the length of the flattened list)
        Initialize an empty list to hold the rows of the new sorted array
        For each row index up to the size of the array
            Create a new row with the elements from the flattened list corresponding to the current row index
            Add the new row to the list of sorted rows

    Return the new sorted two-dimensional array
